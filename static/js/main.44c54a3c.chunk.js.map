{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","Yelp","fetch","concat","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","address1","sipCode","zip_code","categories","title","reviewConut","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44c54a3c.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Business.css\";\r\n\r\nclass Business extends React.Component {\r\n    render(){\r\n      return (\r\n        <div className=\"Business\">\r\n        <div className=\"image-container\">\r\n          <img src={this.props.business.imageSrc} alt=''/>\r\n        </div>\r\n        <h2>{this.props.business.name}</h2>\r\n        <div className=\"Business-information\">\r\n          <div className=\"Business-address\">\r\n            <p>{this.props.business.address}</p>\r\n            <p>{this.props.business.city}</p>\r\n            <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n          </div>\r\n          <div className=\"Business-reviews\">\r\n            <h3>{this.props.business.category}</h3>\r\n            <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n            <p>{this.props.business.reviewCount} reviews</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n}\r\nexport default Business;\r\n","import React from \"react\";\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\nclass BusinessList extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"BusinessList\"> \r\n            \r\n            {this.props.businesses.map(business =>{\r\n                return <Business key={business.id} business={business}/>;\r\n            })}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BusinessList;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\nconst sortByOptions = {\r\n    'Best Match' : 'best_match',\r\n    'Highest Rated' : 'rating',\r\n    'Most Reviewed' : 'review_count'\r\n}\r\nclass SearchBar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term : \"\",\r\n            location : \"\",\r\n            sortBy : \"best_match\"\r\n        };\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n    }\r\n    getSortByClass(sortByOption){\r\n        if(this.state.sortBy === sortByOption){\r\n            return \"active\"\r\n        }else{\r\n            return \"\"\r\n        }\r\n    }\r\n    handleSortByChange(sortByOption){\r\n        this.setState({sortBy : sortByOption});\r\n    }\r\n    handleTermChange(event){\r\n        this.setState({term : event.target.value});\r\n    }\r\n    handleLocationChange(event){\r\n        this.setState({location : event.target.value});\r\n    }\r\n    handleSearch(event){\r\n        this.props.searchYelp(this.state.term,this.state.location,this.state.sortBy);\r\n        event.preventDefault()\r\n    }\r\n\r\n    renderSortByOptions(){\r\n        return Object.keys(sortByOptions).map(sortByOption =>{\r\n            let sortByOptionValue = sortByOptions[sortByOption];\r\n            return <li key={sortByOptionValue} className={this.getSortByClass(sortByOptionValue)}\r\n            onClick={this.handleSortByChange.bind(this,sortByOptionValue)}>{sortByOption} </li>;\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n        <div className=\"SearchBar\">\r\n            <div className=\"SearchBar-sort-options\">\r\n                <ul>\r\n                {this.renderSortByOptions()}\r\n                </ul>\r\n             </div>\r\n             <div className=\"SearchBar-fields\">\r\n                <input placeholder=\"Search Businesses\" onChange={this.handleTermChange}/>\r\n                <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\r\n            </div>\r\n                <div className=\"SearchBar-submit\">\r\n                     <a onClick={this.handleSearch}>Let's Go</a>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default SearchBar;\r\n","const apiKey = 'rPDurkM5RSTPv0EF7jqIv1NNXzOe2Q1c7aeBgGEfcqgUwXVZy54YhhwrYZIxqCEgs6MBeRrRKimCV5VePpcoWL3E6RQLCgXHoo3wyeV59c_sItsBJWmFM4S9GRHjXHYx';\r\nconst Yelp = {\r\n    searchYelp(term, location,sortBy){\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`\r\n        , { \r\n            headers: {\r\n              Authorization: `Bearer ${apiKey}` \r\n            }}).then(response => {\r\n                return response.json();\r\n              }).then(jsonResponse => {\r\n               if(jsonResponse.businesses){return jsonResponse.businesses.map((business => {console.log(business);\r\n                    return {\r\n                        id: business.id,\r\n                        imageSrc: business.image_url,\r\n                        name: business.name,\r\n                        address: business.location.address1,\r\n                        city: business.location.city,\r\n                        state: business.location.state,\r\n                        sipCode: business.location.zip_code,\r\n                        category: business.categories[0].title,\r\n                        rating: business.rating,\r\n                        reviewConut: business.review_count\r\n                    };\r\n                }))}\r\n              });;\r\n    }\r\n}\r\n\r\nexport default Yelp;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport BusinessList from \"../src/components/BusinessList/BusinessList\";\r\nimport SearchBar from \"../src/components/SearchBar/SearchBar\";\r\nimport Yelp from \"../src/util/Yelp\";\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      businesses: [],\r\n    };\r\n    this.searchYelp = this.searchYelp.bind(this);\r\n  }\r\nsearchYelp(term,location,sortBy){\r\n  Yelp.searchYelp(term,location,sortBy).then((businesses) =>{\r\n    this.setState({businesses: businesses });\r\n  });\r\n}\r\nrender(){\r\n  return (\r\n      <div className=\"App\">\r\n          <h1>ravenous</h1>\r\n          <SearchBar searchYelp={this.searchYelp}/>\r\n          <BusinessList businesses={this.state.businesses}/>\r\n      </div>\r\n  );\r\n}\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}